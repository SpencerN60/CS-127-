import random

def initialChoice():
    choice = input("Choice? [p]lay, [i]nstructions, [q]uit: ")
    while choice != "p" and choice != "i" and choice != "q":
        print("ERROR: Please enter 'p', 'i', or 'q'...")
        choice = input("Choice? [p]lay, [i]nstructions, [q]uit: ")
    return choice

def chooseNumPlayers():
    numPlayers = input("Choose number of players: 1 or 2 ->")
    while numPlayers != "1" and numPlayers != "2":
        numPlayers = input("Choose number of players: 1 or 2 ->")
    
    #       If the user chooses '1,' then they play against the computer
    #       If the user chooses '2,' then they play agianst another human
    return numPlayers

def wait():
    input("Press [Enter] To Continue...")
    print()

def printBanner():
    print("#######################################################################")
    print()
    print("~~ Starting New Round ~~")
    print()

def printPoints(playerNum, points):
    print("* Player {0} has {1} Points!".format(playerNum, points))
    print()

def wagerPointsHuman(playerNum, points):
    wager = 0
    # TODO: Use the 'do-while' pattern to take in input for how many points a human would like to wager
    # NOTE: The player cannot wager more points than they have, nor can they wager  zero points, nor can they wager a negative number of points
    return wager

def wagerPointsAI(playerNum, points):
    wager = 0
    # TODO: Generate a random integer from 1 to (points + 1), non-inclusive, which will be the number of points for the computer to wager
    # NOTE: Try to have the AI version match the look of the output of the human version above 
    return wager

def generateTargetValue(numSpinners, spinnerLow, spinnerHigh): # finished
    target = 0
    numberSpinners = random.randrange(1,numSpinners + 1)
    for i in range(0,numberSpinners):
        target += random.randrange(spinnerLow, spinnerHigh + 1)
    return target

def getSpinnerChoiceHuman(playerNum, target, numSpinners, spinnerLow, spinnerHigh):
    spinnerChoice = 0
    # TODO: Use the 'do-while' pattern to take in input from the user for how many spinners they would like to spin
    # Ex: if numSpinners is 3, then the user can pick between 1-3
    # NOTE: Use the spinnerLow and spinnerHigh values to output data about what the player could spin
    return spinnerChoice

def getSpinnerChoiceAI(playerNum, target, numSpinners, spinnerLow, spinnerHigh):
    spinnerChoice = 0
    # TODO: Generate a random integer from 1 to (numSpinners + 1), non-inclusive, for the computer to know how many spinners to spin
    # NOTE: Try to have the AI version match the look of the output of the human version above
    return spinnerChoice

def spinSpinners(playerNum, spinnerChoice, target, spinnerLow, spinnerHigh):
    # TODO: Calculate the total generated by a given number of spinners (spinnerChoice)
    # Ex: if spinnerChoice is 3, and you spin 2, 3, and 1, then spinTotal would be 6
    spinTotal = 0
    return spinTotal

def resetGameOptions():
    player1Points = 10
    player2Points = 10
    return player1Points, player2Points

def main():
    # main script running control variable
    running = True
    
    # gameplay variables
    SPINNER_LOW = 1
    SPINNER_HIGH = 3
    NUM_SPINNERS = 3
    player1Points = 10
    player2Points = 10

    # Print title material here
    while running:
        choice = initialChoice() # Asks for input to play, instructions, or quit
        if choice == "p":
            numPlayers = chooseNumPlayers()

            # main game loop
            while True:
                printBanner()
                # get a target value
                targetValue = generateTargetValue(NUM_SPINNERS, SPINNER_LOW, SPINNER_HIGH)
                print("Your target value is: {}".format(targetValue))
                enter = input("Press enter to continue: ")
                

main()


